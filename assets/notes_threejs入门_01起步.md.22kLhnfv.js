import{_ as e,c as a,as as t,o as i}from"./chunks/framework.CsiIftoR.js";const g=JSON.parse('{"title":"起步","description":"","frontmatter":{},"headers":[],"relativePath":"notes/threejs入门/01起步.md","filePath":"notes/threejs入门/01起步.md","lastUpdated":1738327344000}'),r={name:"notes/threejs入门/01起步.md"};function l(n,s,h,p,o,k){return i(),a("div",null,s[0]||(s[0]=[t(`<h1 id="起步" tabindex="-1">起步 <a class="header-anchor" href="#起步" aria-label="Permalink to &quot;起步&quot;">​</a></h1><blockquote><p>此笔记记录于<a href="https://discoverthreejs.com/" target="_blank" rel="noreferrer">DISCOVER three.js</a>，大多数为其中的摘要，少数为笔者自己的理解</p></blockquote><h2 id="笛卡尔坐标系-3-维" tabindex="-1">笛卡尔坐标系（3 维） <a class="header-anchor" href="#笛卡尔坐标系-3-维" aria-label="Permalink to &quot;笛卡尔坐标系（3 维）&quot;">​</a></h2><p>可以看看<a href="https://zh.wikipedia.org/wiki/%E7%AC%9B%E5%8D%A1%E5%B0%94%E5%9D%90%E6%A0%87%E7%B3%BB" target="_blank" rel="noreferrer">这个链接</a></p><p>采用右手法则，如下图：</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020231215105010.png" alt=""></p><h2 id="github-上的-three-js" tabindex="-1">GitHub 上的 three.js <a class="header-anchor" href="#github-上的-three-js" aria-label="Permalink to &quot;GitHub 上的 three.js&quot;">​</a></h2><p><a href="https://github.com/mrdoob/three.js/tree/dev/build" target="_blank" rel="noreferrer"><strong>build</strong>文件夹</a>是 repo 中最重要的文件夹，因为它包含最重要的 three.js 文件（库的核心 ）：</p><ul><li><em><strong>build/three.module.js</strong></em></li></ul><p><strong>这是运行基本的 three.js 应用程序所需的唯一文件。</strong></p><p>文件名中的** .module**告诉我们这是一个 <a href="https://discoverthreejs.com/zh/book/appendix/javascript-modules/" title="JavaScript 模块" target="_blank" rel="noreferrer">JavaScript 模块</a>。在此文件夹中，如果您想支持无法使用模块的过时浏览器，还可以使用两个旧版本的 three.js 核心：</p><ul><li><em><strong>build/three.js</strong></em></li><li><em><strong>build/three.min.js</strong></em></li></ul><p><a href="https://github.com/mrdoob/three.js/tree/dev/examples" target="_blank" rel="noreferrer"><em><strong>examples/</strong></em></a>文件夹包含许多好东西，包括：</p><ul><li>所有 <a href="https://threejs.org/examples/" target="_blank" rel="noreferrer">官方示例</a>的 <a href="https://github.com/mrdoob/three.js/tree/master/examples/" target="_blank" rel="noreferrer">源代码</a>，您应该将其作为主要学习资源之一进行学习。</li><li><a href="https://github.com/mrdoob/three.js/tree/master/examples/jsm/" target="_blank" rel="noreferrer"><em><strong>examples/jsm</strong></em></a>文件夹中的插件 ，例如相机控件和模型加载器，我们在整本书中都会用到它们。您也应该在这里学习代码，尽管它往往更高级，所以您可能要等到您先了解更多其他基础内容。</li><li><a href="https://github.com/mrdoob/three.js/tree/master/examples/js/" target="_blank" rel="noreferrer"><em><strong>examples/js</strong></em></a>文件夹中的旧插件 。这些与您在 examples/jsm 中找到的插件集相同，但是，它们将适用于过时的浏览器。就像核心的遗留版本一样，遗留插件将很快被删除，我们将在本书中忽略它们。</li><li><a href="https://github.com/mrdoob/three.js/tree/master/examples/fonts/" target="_blank" rel="noreferrer">3D 字体</a>。</li><li>许多不同格式的 <a href="https://github.com/mrdoob/three.js/tree/master/examples/models/" target="_blank" rel="noreferrer">3D 模型</a>。</li><li><a href="https://github.com/mrdoob/three.js/tree/master/examples/sounds/" target="_blank" rel="noreferrer">音效</a>。</li><li><a href="https://github.com/mrdoob/three.js/tree/master/examples/textures/" target="_blank" rel="noreferrer">纹理</a>。</li><li>… 还有很多。</li></ul><p>你需要学习 three.js 的一切都在那里——除了这本书！更重要的是，该文件夹中的几乎所有内容都包含在 <a href="https://github.com/mrdoob/three.js/blob/dev/LICENSE" target="_blank" rel="noreferrer">MIT license</a>中，这意味着您可以以任何您喜欢的方式自由使用项目中的任何内容。</p><h2 id="安装导入" tabindex="-1">安装导入 <a class="header-anchor" href="#安装导入" aria-label="Permalink to &quot;安装导入&quot;">​</a></h2><p><a href="https://threejs.org/docs/#manual/zh/introduction/Installation" target="_blank" rel="noreferrer">官网入口</a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 初始化</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NPM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 一旦初始化了</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NPM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 项目，就可以安装</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> three</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包了</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> three</span></span></code></pre></div><p>导入类</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Camera,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Material,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Texture,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;three&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>导入插件不是很方便，因为一个 NPM 包只能有一个主文件。要导入 OrbitControls，我们需要直接引用包含模块：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { OrbitControls } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;three/examples/jsm/controls/OrbitControls.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,22)]))}const m=e(r,[["render",l]]);export{g as __pageData,m as default};
