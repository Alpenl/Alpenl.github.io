import{_ as T,D as l,Q,H as t,ah as a,B as e}from"./chunks/framework.kYnPRA0Y.js";const J=JSON.parse('{"title":"关系数据库理论","description":"","frontmatter":{},"headers":[],"relativePath":"notes/数据库01/06关系数据理论(重点).md","filePath":"notes/数据库01/06关系数据理论(重点).md","lastUpdated":1738327344000}'),o={name:"notes/数据库01/06关系数据理论(重点).md"},i=a(`<h1 id="关系数据库理论" tabindex="-1">关系数据库理论 <a class="header-anchor" href="#关系数据库理论" aria-label="Permalink to &quot;关系数据库理论&quot;">​</a></h1><h2 id="相关概念" tabindex="-1">相关概念 <a class="header-anchor" href="#相关概念" aria-label="Permalink to &quot;相关概念&quot;">​</a></h2><ul><li><p>关系：描述实体、属性、实体间的联系。从形式上看，它是一张二维表，是所涉及属性的笛卡尔积的一个子集。</p></li><li><p>关系模式：用来定义关系，是对关系的描述</p></li><li><p>关系数据库：基于关系模式的数据库。利用关系来描述现实世界从形式上看，它由一组关系组成。</p></li><li><p>关系模式有五部分组成，可以定义为<code>R(U,D,DOM,F)</code></p><ul><li>R：关系名</li><li>U：组成该关系的属性名集合</li><li>D：属性组 U 中属性所来自的域</li><li>DOM：属性向域的映像集合</li><li>F：属性间数据的依赖集合</li></ul></li><li><p>数据依赖：是通过一个关系中属性间值的相等与否体现出来的数据间的相互关系，它是现实世界属性间相互关联的抽象。是数据内在的性质，是语义的体现。</p></li><li><p><strong>数据依赖的类型</strong>分为函数依赖和多值依赖</p></li><li><p>由于 D 和 DOM 对模式涉及关系不大，在本节中把关系模式简化为一个三元组：R(U,F)，研究重点为：</p><ul><li>一个关系模式应该有哪些属性；</li><li>这些属性间存在什么样的联系</li></ul></li></ul><h2 id="数据依赖的影响" tabindex="-1">数据依赖的影响 <a class="header-anchor" href="#数据依赖的影响" aria-label="Permalink to &quot;数据依赖的影响&quot;">​</a></h2><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115155557.png" alt=""></p><ul><li>冗余数据太大，浪费大量的存储空间。比如每个分组及组长重复出现</li><li>更新异常：数据冗余，在更新数据时，维护数据完整性代价大。比如如果要更改一名员工到另外一个组，则需要将这个员工的所有销售对应的分组和组长进行更新。</li><li>插入异常：该插的数据插不进去。比如由于主码中所包含的属性值不能取空值，如果新成立一个组，由于这个组还没分配员工，就无法将这个分组插入关系中</li><li>删除异常：不该删除的数据不得不删除比如如果某个分组的所有员工被调到其他分组，则这个组的信息会随所有组员的调动而全部丢失</li></ul><p>“好”的关系模式不会发生插入异常、删除异常、更新异常，数据冗余应尽可能少。</p><p>原因：由存在于模式中的某些数据依赖引起的。解决方法：通过分解关系模式来消除其中不合适的数据依赖。</p><p>我们就可以把 SALE 关系分解为三个关系模式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>S1(ENO, SaleDate, SaleAmount)</span></span>
<span class="line"><span>S21(ENO, Group)</span></span>
<span class="line"><span>S22(Group, GName)</span></span></code></pre></div><h2 id="函数依赖" tabindex="-1">函数依赖 <a class="header-anchor" href="#函数依赖" aria-label="Permalink to &quot;函数依赖&quot;">​</a></h2><p>对于 R（U）上的任一一个可能的关系 r，如果 r 中不存在两个元组，它们在 X 上的属性值相同，而在 Y 上的属性值不同，则称<strong>X 函数决定 Y</strong>或<strong>Y 函数依赖于 X</strong>，记作<code>X-&gt;Y</code></p><p>X 称为决定因素或决定属性集</p><p>说明：</p><ul><li>函数依赖不是指关系模式 R 的某个或某些关系实例满足的约束条件，而是指 R 的所有关系实例均要满足的约束条件</li><li>函数依赖时语义范畴的概念</li><li>数据库设计着可以对现实世界作强制的规定</li><li>若<code>X-&gt;Y</code>，且<code>Y-&gt;X</code>，则记<code>X&lt;--&gt;Y</code></li><li>若 Y 不函数依赖于 X，则记作<code>X!=&gt;Y</code></li></ul><p>【例】关系模式学生（学号，姓名，出生年份，性别，学院，专业，微信号），假设不允许重名，则有:</p><ul><li>学号 →出生年份 , 学号 →性别，学号 → 学院，学号 → 专业， 学号 → 微信号；</li><li>学号 ←→ 姓名；</li><li>姓名 →出生年份 , 姓名 →性别，姓名 → 学院，姓名 → 专业，姓名 → 微信号；</li><li>但性别→专业。</li></ul><h3 id="非平凡函数依赖" tabindex="-1">非平凡函数依赖 <a class="header-anchor" href="#非平凡函数依赖" aria-label="Permalink to &quot;非平凡函数依赖&quot;">​</a></h3><p>在关系模式 R（U）中，对于 U 的子集 X 和 Y，如果 X→Y，但 Y ⊈ X，则称 X→Y 是<strong>非平凡函数依赖</strong>（后续主要讨论这个）；若 X→Y，但 Y⊆ X，则称 X→Y 是<strong>平凡函数依赖</strong>。</p><p>【例】在关系 R1（ENO，SaleDate，SaleAmount）中，个属性分别为员工编号，日期，销售量，每个员工每天会有一个销售额，存在如下函数依赖： 非平凡函数依赖：(ENO，SaleDate) → SaleAmount； 平凡函数依赖： (ENO，SaleDate) → ENO， (ENO，SaleDate) → SaleDate。</p><p>对于任一关系模式，平凡函数依赖都是必然成立的，它不反映新的语义，因此若不特别声明， 我们总是讨论非平凡函数依赖。</p><h3 id="完全函数依赖" tabindex="-1">完全函数依赖 <a class="header-anchor" href="#完全函数依赖" aria-label="Permalink to &quot;完全函数依赖&quot;">​</a></h3>`,22),s={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},n={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.173ex",height:"2.948ex",role:"img",focusable:"false",viewBox:"0 -1291.8 3170.6 1302.8","aria-hidden":"true"},r=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(1129.8,0)"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(235.2,711) scale(0.707)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z" style="stroke-width:3;"></path></g></g></g>',1),d=[r],m=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mi",null,"X"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mi",null,"F")]),Q("mi",null,"Y")])],-1),h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.173ex",height:"2.952ex",role:"img",focusable:"false",viewBox:"0 -1294 3170.6 1305","aria-hidden":"true"},c=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(1129.8,0)"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(234.5,711) scale(0.707)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z" style="stroke-width:3;"></path></g></g></g>',1),g=[c],u=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mi",null,"X"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mi",null,"P")]),Q("mi",null,"Y")])],-1),N=Q("p",null,[t("【例】如在关系 R1（ENO，SaleDate，SaleAmount）中，由于"),Q("code",null,"ENO !=> SaleAmount， SaleDate !=> SaleAmount，")],-1),_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"33.709ex",height:"3.488ex",role:"img",focusable:"false",viewBox:"0 -1291.8 14899.2 1541.8","aria-hidden":"true"},f=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1153,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2041,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2804,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3248.7,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3893.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4422.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4720.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5186.7,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6014.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6543.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6904.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7370.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(8037.4,0)"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(235.2,711) scale(0.707)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(9315.2,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(9960.2,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(10489.2,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(10787.2,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(11253.2,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(12003.2,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(12881.2,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(13366.2,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(13938.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(14538.2,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g></g></g>',1),H=[f],M=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mo",{stretchy:"false"},"("),Q("mi",null,"E"),Q("mi",null,"N"),Q("mi",null,"O"),Q("mo",null,","),Q("mi",null,"S"),Q("mi",null,"a"),Q("mi",null,"l"),Q("mi",null,"e"),Q("mi",null,"D"),Q("mi",null,"a"),Q("mi",null,"t"),Q("mi",null,"e"),Q("mo",{stretchy:"false"},")"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mi",null,"F")]),Q("mi",null,"S"),Q("mi",null,"a"),Q("mi",null,"l"),Q("mi",null,"e"),Q("mi",null,"A"),Q("mi",null,"m"),Q("mi",null,"o"),Q("mi",null,"u"),Q("mi",null,"n"),Q("mi",null,"t")])],-1),w=Q("h3",{id:"传递函数依赖",tabindex:"-1"},[t("传递函数依赖 "),Q("a",{class:"header-anchor",href:"#传递函数依赖","aria-label":'Permalink to "传递函数依赖"'},"​")],-1),S={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.02ex",height:"3.178ex",role:"img",focusable:"false",viewBox:"0 -1393.8 3544.8 1404.8","aria-hidden":"true"},b=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(1129.8,0)"><g data-mml-node="mo" transform="translate(207.1,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mrow" transform="translate(0,763.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">递</text></g></g></g><g data-mml-node="mi" transform="translate(2821.8,0)"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z" style="stroke-width:3;"></path></g></g></g>',1),k=[b],y=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mi",null,"X"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mrow",null,[Q("mi",{mathvariant:"normal"},"传"),Q("mi",{mathvariant:"normal"},"递")])]),Q("mi",null,"Z")])],-1),F={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},v={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"17.945ex",height:"3.203ex",role:"img",focusable:"false",viewBox:"0 -1393.8 7931.8 1415.8","aria-hidden":"true"},O=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(764,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1652,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(2692.8,0)"><g data-mml-node="mo" transform="translate(207.1,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mrow" transform="translate(0,763.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">递</text></g></g></g><g data-mml-node="mi" transform="translate(4384.8,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5170.8,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6058.8,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6587.8,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7465.8,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g></g></g>',1),D=[O],Z=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mi",null,"E"),Q("mi",null,"N"),Q("mi",null,"O"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mrow",null,[Q("mi",{mathvariant:"normal"},"传"),Q("mi",{mathvariant:"normal"},"递")])]),Q("mi",null,"G"),Q("mi",null,"N"),Q("mi",null,"a"),Q("mi",null,"m"),Q("mi",null,"e")])],-1),G=Q("h2",{id:"码",tabindex:"-1"},[t("码 "),Q("a",{class:"header-anchor",href:"#码","aria-label":'Permalink to "码"'},"​")],-1),C={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},X={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.266ex",height:"2.972ex",role:"img",focusable:"false",viewBox:"0 -1291.8 3211.6 1313.8","aria-hidden":"true"},P=a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z" style="stroke-width:3;"></path></g><g data-mml-node="mover" transform="translate(1166.8,0)"><g data-mml-node="mo"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(235.2,711) scale(0.707)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(2444.6,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width:3;"></path></g></g></g>',1),q=[P],Y=Q("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[Q("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[Q("mi",null,"K"),Q("mover",null,[Q("mo",{stretchy:"false"},"→"),Q("mi",null,"F")]),Q("mi",null,"U")])],-1),R=Q("strong",null,"候选码",-1),E=a('<p>说明：</p><ul><li>候选码可以唯一地识别关系的元组</li><li>包含在任何一个候选码中的属性，叫做<strong>主属性</strong>。不包含在任何候选码中的属性称为<strong>非主属性</strong>或非码属性</li><li>最简单的情况下，候选码只包含一个属性</li><li>最复杂的情况下，候选码包含关系模式的所有属性，称为<strong>全码</strong>。</li></ul><p>关系模式 R 中属性或属性组 X 并非 R 的码，但 X 是另一个关系模式的码，则称 X 是 R 的外部码，简称<strong>外码</strong>。</p><h2 id="第一范式" tabindex="-1">第一范式 <a class="header-anchor" href="#第一范式" aria-label="Permalink to &quot;第一范式&quot;">​</a></h2><h3 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h3><ul><li>如果一个关系模式 R 的所有属性都是不可分的基本数据项（不能表中有表），则 R 是第一范式，简称 1NF，记作 R∈1NF</li><li>第一范式是对关系模式的最起码的要求。满足第一范式的关系称为规范化关系。不满足第一范式的数据库模式不能称为关系数据库。</li></ul><p>非规范化关系</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115180608.png" alt=""></p><p>规范化关系</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115180625.png" alt=""></p><h3 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h3><p>【例】校园超市数据库中有一个记录超市员工每天销售量的关系模式 SALE（U，F），其中 SALE 的属性由员工编号，日期，销售量，分组，组长等属相组成，U 如下所示： U={ENO，SaleDate，SaleAmount，Group，GName}；现有语义规定，每个员工每天会有一个销售额，每个员工只能属于一个分组，每个分组只有一个组长。</p><p>结合现实世界的已知事实，可以分析得到属性组 U 上有如下函数依赖:</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115180803.png" alt=""> 关系模式 SALE 满足第一范式，候选码是（ENO，SaleDate），但 SALE 关系存在很多问题：</p><ul><li>数据冗余太大</li><li>更新异常</li><li>插入异常</li><li>删除异常</li></ul><p>原因：Group、GName 部分函数依赖于码，GName 传递函数于依赖于码。</p><h2 id="第二范式" tabindex="-1">第二范式 <a class="header-anchor" href="#第二范式" aria-label="Permalink to &quot;第二范式&quot;">​</a></h2><h3 id="定义-1" tabindex="-1">定义 <a class="header-anchor" href="#定义-1" aria-label="Permalink to &quot;定义&quot;">​</a></h3><ul><li>若关系模式 R∈1NF，且<strong>每一个非主属性都完全函数依赖于码</strong>，则称 R 为第二范式，简称 2 NF，记作 R∈2NF。</li><li>第二范式也可以理解为：不允许关系模式中存在这样的依赖：如果 X’是码 X 的真子集，有 X’→Y，其中 Y 是该关系模式的非主属性。</li></ul><h3 id="_1nf-向-2nf-的转换" tabindex="-1">1NF 向 2NF 的转换 <a class="header-anchor" href="#_1nf-向-2nf-的转换" aria-label="Permalink to &quot;1NF 向 2NF 的转换&quot;">​</a></h3><ul><li>由第一范式向第二范式转换的方法是：消除其中非主属性对码的部分函数依赖，一般是将一个关系模式分解成多个 2NF 的关系模式。</li><li>即将部分函数依赖于码的非主属性及其决定属性移除，另外形成一个关系，从而满足 2NF。</li></ul><p>【例】关系 SALE(ENO，SaleDate，SaleAmount，Group，GName)是 1NF，但存在非主属性 Group，GName 对码的部分函数依赖，采用分解法，把 SALE 分解为两个关系模式：</p><ul><li><p>S1（ENO，SaleDate，SaleAmount）</p></li><li><p>S2（ENO，Group，GName）</p></li><li><p>其中 S1 的码为（ENO，SaleDate），S2 的码为 ENO。</p></li><li><p>分解之后的关系模式 S1 和 S2 中，非主属性都完全函数依赖于码了。S1 和 S2 的函数依赖图如图所示。</p></li></ul><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115184448.png" alt=""></p><h3 id="问题-1" tabindex="-1">问题 <a class="header-anchor" href="#问题-1" aria-label="Permalink to &quot;问题&quot;">​</a></h3><ul><li>SALE 关系分解之后得到的 S1 关系和 S2 关系都是第二范式，在一定程度上能够减轻原关系中存在的各种异常问题。</li><li>但是将一个 1NF 关系分解为多个 2NF 关系，并不能完全消除关系模式中的各种异常情况和数据冗余。</li><li>一个属于 2NF 的关系模式也不一定是一个好的关系模式</li></ul><p>【例】SALE 分解后得到的关系模式 S2（ENO，Group，GName）</p><ul><li>是一个 2NF 的关系模式</li><li>不存在非主属性对码的部分函数依赖</li><li>但 S2 仍然存在问题： <ul><li>数据冗余度大</li><li>插入异常</li><li>删除异常</li><li>更新问题</li></ul></li><li>原因：存在非主属性 GName 传递函数依赖于码（没有员工不能插入组）</li></ul><h2 id="第三范式" tabindex="-1">第三范式 <a class="header-anchor" href="#第三范式" aria-label="Permalink to &quot;第三范式&quot;">​</a></h2><h3 id="定义-2" tabindex="-1">定义 <a class="header-anchor" href="#定义-2" aria-label="Permalink to &quot;定义&quot;">​</a></h3><p>如果关系 R 为 2NF，并且<strong>R 中每一个非主属性都不传递依赖于 R 的候选码</strong>，则称 R 为第三范式，简称 3NF，记作 R∈3NF。</p><h3 id="_2nf-向-3nf-的转换" tabindex="-1">2NF 向 3NF 的转换 <a class="header-anchor" href="#_2nf-向-3nf-的转换" aria-label="Permalink to &quot;2NF 向 3NF 的转换&quot;">​</a></h3><p>第二范式向第三范式转换就是消除非主属性对码的传递函数依赖。即将传递函数依赖于码的非主属性及其决定属性移除，另外形成一个关系，从而满足 3NF。</p><p>【例】关系模式 S2（ENO，Group，GName）是 2NF，但存在非主属性 GName 传递依赖于码 ENO，采用分解法，把 S2 分解为两个关系模式：</p><ul><li>S21（ENO，Group）</li><li>S22（Group，GName）</li></ul><p>其中 S21 的码为 ENO，S22 的码为 Group。分解之后的关系模式 S21 和 S22 中，不存在非主属性对码的传递函数依赖。S21 和 S22 的函数依赖图如图所示。</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115185415.png" alt=""></p><h3 id="问题-2" tabindex="-1">问题 <a class="header-anchor" href="#问题-2" aria-label="Permalink to &quot;问题&quot;">​</a></h3><ul><li>将一个 2NF 的关系分解为多个 3NF 的关系，可以在一定程度上解决原 2NF 关系中存在的插入异常、删除异常、数据冗余度大、修改复杂等问题。</li><li>但是将一个 2NF 关系分解为多个 3NF 的关系后，并不一定能完全消除关系模式中的各种异常情况和数据冗余。</li></ul><p>【例】校园超市数据库中有一个记录仓库商品管理的关系模式 SM（GoodsNO，StorageNO，ManagerNO，SNUM），各属性分别是商品编码，仓库编码，仓库管理员编码，商品的存放数量；现有语义规定：一个管理员只在一个仓库工作；一个仓库只有一个管理员管理；一个仓库可以存储多种商品，一种商品可以存放在不同仓库；每种商品在一个仓库存放有一个存放数量。</p><p>结合现实世界的已知事实，可以分析得到 SM 的属性组 上有如下函数依赖:</p><ul><li>StorageNO→ManagerNO</li><li>ManagerNO→StorageNO</li><li>(GoodsNO，StorageNO)→SNUM</li><li>(GoodsNO，StorageNO)→ManagerNO</li><li>(GoodsNO，ManagerNO)→StorageNO</li><li>(GoodsNO，ManagerNO)→SNUM</li></ul><p>SM 的候选码有两个：(GoodsNO，StorageNO)和(GoodsNO，ManagerNO)</p><p>关系 SM 中的唯一非主属性是 SNUM，它是完全依赖于候选码的，且不传递依赖于候选码。因此 SM 是符合第三范式的。</p><p>但 SM 关系仍然存在很多问题：</p><ul><li>数据冗余太大</li><li>更新异常</li><li>插入异常</li><li>删除异常</li></ul><p>原因：3NF 没有限制主属性对码的依赖关系，因此在 3NF 中，可能<strong>存在主属性的部分函数依赖和传递函数依赖</strong>，从而导致操作异常。</p><h2 id="bc-范式" tabindex="-1">BC 范式 <a class="header-anchor" href="#bc-范式" aria-label="Permalink to &quot;BC 范式&quot;">​</a></h2><h3 id="定义-3" tabindex="-1">定义 <a class="header-anchor" href="#定义-3" aria-label="Permalink to &quot;定义&quot;">​</a></h3><ul><li>关系模式是 1NF，如果对于 R 的每个函数依赖 X→Y，若 Y 不属于 X 时 X 必含有候选码，则称 R 为 BC 范式，简称 BCNF，记作 R∈BCNF。</li><li>BCNF 的定义可以这样理解：如果关系 R 为 1NF，并且 R 中<strong>不存在任何属性对码的部分依赖或传递依赖</strong>，那么称 R 为 BCNF。</li></ul><p>BCNF 的关系模式具有以下特性：</p><ul><li>所有的非主属性对每一个码都是完全函数依赖。</li><li>所有的主属性对每一个不包含它的码，也是完全函数依赖</li><li>没有任何属性完全函数依赖于非码的任何一组属性</li></ul><h3 id="_3nf-向-bcnf-的转换" tabindex="-1">3NF 向 BCNF 的转换 <a class="header-anchor" href="#_3nf-向-bcnf-的转换" aria-label="Permalink to &quot;3NF 向 BCNF 的转换&quot;">​</a></h3><p>3NF 和 BCNF 之间的区别在于，对一个函数依赖 X→Y，3NF 允许 Y 是主属性，而 X 不为候选码。但 BCNF 要求 X 必为候选码。因此 BCNF 的限制比 3NF 更严格，3NF 不一定是 BCNF，而 BCNF 一定是 3NF。</p><p>要将 3NF 关系向 BCNF 关系<strong>转换就是要消除主属性对码的部分和传递函数依赖</strong>。</p><p>【例】校园超市数据库中有一个记录仓库商品管理的关系模式 SM（GoodsNO，StorageNO，ManagerNO，SNUM），各属性分别是商品编码，仓库编码，仓库管理员编码，商品的存放数量；现有语义规定：一个管理员只在一个仓库工作；一个仓库只有一个管理员管理；一个仓库可以存储多种商品，一种商品可以存放在不同仓库；每种商品在一个仓库存放有一个存放数量。</p><p>结合现实世界的已知事实，可以分析得到 SM 的属性组上有如下函数依赖:</p><ul><li>StorageNO→ManagerNO</li><li>ManagerNO→StorageNO</li><li>(GoodsNO，StorageNO)→SNUM</li><li>(GoodsNO，StorageNO)→ManagerNO</li><li>(GoodsNO，ManagerNO)→StorageNO</li><li>(GoodsNO，ManagerNO)→SNUM</li></ul><p>SM 的候选码有两个：(GoodsNO，StorageNO)和(GoodsNO，ManagerNO)</p><ul><li>关系 SM 中的唯一非主属性是 SNUM，它是完全依赖于候选码的，且不传递依赖于候选码。因此 SM 是符合第三范式的。</li><li>但 SM 存在主属性 ManagerNO 和 StorageNO 对码的部分函数依赖。不符合 BC 范式的要求。</li><li>为了消除主属性对码的部分函数依赖，分解 SM 为两个关系模式： <ul><li>SM1(GoodsNO，StorageNO，SNUM)</li><li>SM2(StorageNO，ManagerNO)</li></ul></li><li>SM1 的候选码是(GoodsNO，StorageNO)，SM2 的候选码是 StorageNO 或者 ManagerNO。SM1 和 SM2 都满足 BC 范式要求。</li></ul><h3 id="问题-3" tabindex="-1">问题 <a class="header-anchor" href="#问题-3" aria-label="Permalink to &quot;问题&quot;">​</a></h3><p>在函数依赖范畴，BCNF 的关系模式规范化程度已经是最高了。但如果考虑其他数据依赖，那么属于 BCNF 的关系模式仍然存在问题，不能算是一个完美的关系模式。</p><p>【例】校园超市有一仓库商品管理的关系模式 WMG(W，M，G)，其中 W 表示仓库，M 表示仓库管理员，G 表示商品。假设每个仓库有若干个仓库管理员，有若干种商品。每个仓库管理员管理多个仓库的多种商品，每种商品可以存放在多个仓库。</p><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115193942.png" alt=""></p><ul><li>关系模式 W M G 的码是（ W ， M ， G ） ， 即全码， 因而 WMG∈BCNF。</li><li>但 WMG 关系仍然存在很多问题： <ul><li>数据冗余</li><li>更新异常</li><li>插入异常</li><li>删除异常</li></ul></li><li>原因：在 WMG 的属性间存在一种有别于函数依赖的依赖关系，它具有如下特点： <ul><li>对于一个 W 值，如 W1，会有一组 M 值与之对应，如：M1，M2 与之对应。</li><li>仓库与仓库管理员的对应关系，与商品的取值无关。</li></ul></li></ul><h3 id="多值依赖" tabindex="-1">多值依赖 <a class="header-anchor" href="#多值依赖" aria-label="Permalink to &quot;多值依赖&quot;">​</a></h3><ul><li>设 R(U)是一个属性集 U 上的一个关系模式， X、Y 和 Z 是 U 的子集，并且 Z＝U－X－Y，多值依赖 X→→Y 成立当且仅当对 R 的任一关系 r，r 在（X，Z）上的每个值对应一组 Y 的值，这组值仅仅决定于 X 值而与 Z 值无关。</li><li>若 X→→Y，而 Z＝φ，则称 X→→Y 为平凡的多值依赖，否则称 X→→Y 为非平凡的多值依赖。</li><li>在关系模式 WMG 中，很显然存在着非平凡的多值依赖，即 W→→M，W→→G。</li></ul><p>多值依赖与函数依赖相比，具有下面两个基本的区别：</p><ul><li>若函数依赖 X→Y 在 R（U）上成立，则对于任何 Y’⊂Y 均有 X→Y’成立；而多值依赖 X→→Y 若在 R（U）上成立，我们却不能断言对于任何 Y’⊂Y 有 X→→Y’成立。</li><li>在关系模式 R（U）中函数依赖 X→Y 的有效性仅决定于 X，Y 这两个属性集的值。但是多值依赖的有效性与属性集的范围有关。</li></ul><h2 id="第四范式" tabindex="-1">第四范式 <a class="header-anchor" href="#第四范式" aria-label="Permalink to &quot;第四范式&quot;">​</a></h2><h3 id="定义-4" tabindex="-1">定义 <a class="header-anchor" href="#定义-4" aria-label="Permalink to &quot;定义&quot;">​</a></h3><ul><li>关系模式 R&lt;U，F&gt;∈1NF，如果对于 R 的每个非平凡多值依赖 X→→Y（Y⊆X），X 都含有候选码，则称 R 为第四范式，简称 4NF，记作 R∈4NF。</li><li>4NF 限制了关系模式的属性之间不允许有非平凡且非函数依赖的多值依赖。一个关系模式若属于 4NF，则必然属于 BCNF。</li></ul><h3 id="bcnf-向-4nf-的转换" tabindex="-1">BCNF 向 4NF 的转换 <a class="header-anchor" href="#bcnf-向-4nf-的转换" aria-label="Permalink to &quot;BCNF 向 4NF 的转换&quot;">​</a></h3><p>BCNF 向 4NF 转换就是要消除非平凡且非函数依赖的多值依赖，以减少数据冗余，即将 BCNF 关系分解成多个 4NF 关系模式。</p><p>在 WMG 中，W→→M，W→→G，它们都是非平凡的多值依赖。而关系模式 WMG 的码是全码，即码为（W，M，G）。W 不是码，对照 4NF 的定义 WMG∉ 4NF。</p><p>采用分解的方法消去非平凡且非函数依赖的多值依赖。把 WMG 分解两个关系模式：</p><ul><li>WM（W，M）</li><li>WG（W，G）</li></ul><p>在 WM 中虽然有 W→→M，但这是平凡的多值依赖，且都不是函数依赖。WM 中已不存在非平凡且非函数依赖的多值依赖。所以 WM∈4NF，同理 WG∈4NF。</p><h2 id="规范化小结" tabindex="-1">规范化小结 <a class="header-anchor" href="#规范化小结" aria-label="Permalink to &quot;规范化小结&quot;">​</a></h2><h3 id="规范化步骤" tabindex="-1">规范化步骤 <a class="header-anchor" href="#规范化步骤" aria-label="Permalink to &quot;规范化步骤&quot;">​</a></h3><ul><li>1NF 经消除非主属性对码的部分函数依赖后为 2NF。</li><li>2NF 经消除非主属性对码的传递函数依赖后为 3NF。</li><li>3NF 经消除主属性对码的部分和传递函数依赖后为 BCNF。</li><li>BCNF 经消除非平凡且非函数依赖的多值依赖后为 4NF。</li></ul><p><img src="https://oss.justin3go.com/blogs/Pasted%20image%2020230115194520.png" alt=""></p><h3 id="规范化思想" tabindex="-1">规范化思想 <a class="header-anchor" href="#规范化思想" aria-label="Permalink to &quot;规范化思想&quot;">​</a></h3><ul><li>消除不合适的数据依赖，采用“一事一地”的模式设计原则；</li><li>各关系模式达到某种程度的“分离”，实现概念的单一化</li><li>关系模式的规范化结果并不是唯一的，在设计数据库模式结构时，必须对现实世界的实际情况和用户应用需求作进一步分析，确定一个合适的、能够反映现实世界的模式</li><li>不能说规范化程度越高的关系模式就越好，要根据实际情况确定；前面的规范化步骤可以在其中任何一步终止。</li></ul>',84);function A(B,U,V,W,j,I){return e(),l("div",null,[i,Q("ul",null,[Q("li",null,[t("在关系模式 R（U）中，如果 X→Y，并且对于 X 的任何一个真子集 X’，都有 X’→ Y，则称 Y 完全函数依赖于 X，记作"),Q("mjx-container",s,[(e(),l("svg",n,d)),m])]),Q("li",null,[t("若 X→Y，但 Y 不完全函数依赖于 X，则称 Y 部分函数依赖于 X，记作"),Q("mjx-container",h,[(e(),l("svg",p,g)),u])])]),N,Q("p",null,[t("因此"),Q("mjx-container",_,[(e(),l("svg",x,H)),M])]),w,Q("p",null,[t("• 在关系模式 R（U）中，如果 X→Y，Y→Z，且 Y ⊈ X，Y→X，递 则称 Z 传递函数依赖于 X，记作"),Q("mjx-container",S,[(e(),l("svg",L,k)),y])]),Q("p",null,[t("【例】如在销售关系 R（ENO，SaleDate，SaleAmount，Group， GName）中，各属性分别为员工编号，日期，销售量，分组，组长，存在语义每个员工只能属于一个分组，每个分组只有一个组长，由于 ENO→Group，Group→GName，则"),Q("mjx-container",F,[(e(),l("svg",v,D)),Z])]),G,Q("p",null,[t("设 K 为 R（U，F）中的属性或属性组合。若"),Q("mjx-container",C,[(e(),l("svg",X,q)),Y]),t("则 K 为 R 的"),R,t("。若候选码多于一个，则选定其中的一个作为主码。")]),E])}const $=T(o,[["render",A]]);export{J as __pageData,$ as default};
